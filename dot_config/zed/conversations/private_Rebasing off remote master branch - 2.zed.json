{"id":"808dbf31-0da3-4c3b-99dd-df1a20c0cfb3","zed":"context","version":"0.4.0","text":"\n\n\n\nHow do I rebase off of a remote master branch without having to switch to master, pull it locally, and go back to my working branch to rebase?\nTo rebase your current working branch off of a remote master branch without switching to the master branch, you can use the following Git commands:\n\n1. Fetch the latest changes from the remote repository:\n   ```sh\n   git fetch origin\n   ```\n\n2. Rebase your current branch onto the remote master branch:\n   ```sh\n   git rebase origin/master\n   ```\n\nHere's a step-by-step explanation of the commands:\n\n- `git fetch origin`: This command fetches the latest changes from the remote repository named `origin` (which is usually the default name for your remote repository). It updates your local copy of the remote branches without modifying your working directory or current branch.\n\n- `git rebase origin/master`: This command rebases your current branch onto the `origin/master` branch. `origin/master` refers to the master branch on the remote repository. This effectively applies your current branch's commits on top of the latest commits from the remote master branch.\n\nBy using these commands, you can rebase your current branch onto the remote master branch without having to switch to the master branch and pull it locally.\n","messages":[{"id":{"replica_id":0,"value":0},"start":0,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":113}}},{"id":{"replica_id":0,"value":33},"start":147,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":114}}},{"id":{"replica_id":0,"value":34},"start":1273,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":115}}}],"summary":"Rebasing off remote master branch","slash_command_output_sections":[{"range":{"start":0,"end":1},"icon":"Library","label":"Default","metadata":null}]}